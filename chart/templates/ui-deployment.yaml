---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "criticalstack-ui.fullname" . }}
  labels:
{{ include "criticalstack-ui.labels" . | indent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "criticalstack-ui.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "criticalstack-ui.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "/ui"
          args:
            - "--incluster"
            - "--address=0.0.0.0:8000"
            - "--prometheus-endpoint={{ .Values.prometheusEndpoint }}"
          {{- if .Values.debug }}
            - "--debug"
          {{- end}}
          {{ if .Values.tls.enabled }}
            - "--cert-file=/etc/criticalstack-ui-certs/tls.crt"
            - "--key-file=/etc/criticalstack-ui-certs/tls.key"
          {{- end }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
        {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
        {{- end }}
          {{- if .Values.healthcheck.enabled }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
              httpHeaders:
              - name: Accept-Encoding
                value: gzip
              {{- if .Values.tls.enabled }}
              scheme: HTTPS
              {{ else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
              httpHeaders:
              - name: Accept-Encoding
                value: gzip
              {{- if .Values.tls.enabled }}
              scheme: HTTPS
              {{ else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          {{- end }}
          env:
          {{- range $k, $v := .Values.env }}
          - name: {{ $k }}
            value: {{ $v }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: criticalstack-ui-proxy-env
                optional: true
            - secretRef:
                name: criticalstack-ui-secrets
                optional: false
          volumeMounts:
            - mountPath: /tmp
              name: tmp-dir
            {{- if .Values.tls.enabled }}
            - name: criticalstack-ui-certs
              mountPath: /etc/criticalstack-ui-certs/
              readOnly: true
            {{- end }}
      {{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 12 }}
      {{- end }}
      serviceAccountName: criticalstack-ui
      volumes:
        - name: tmp-dir
          emptyDir: {}
        - name: criticalstack-ui-certs
          secret:
            secretName: criticalstack-ui-certs
      {{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
