global:
  rbac:
    pspEnabled: false
additionalPrometheusRules:
- name: cs-extra-rules
  groups:
  - name: node_metrics
    rules:
    - record: node_memory_MemUsed_bytes
      expr: node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes
    - record: node_network_transmit_bytes_per_second
      expr: sum(rate(node_network_transmit_bytes_total{device!="lo",device!~"lxc.*",device!~"cilium.*"}[5m])) by (kubernetes_node)
    - record: node_network_transmit_errors_per_second
      expr: sum(rate(node_network_transmit_errs_total{device!="lo",device!~"lxc.*",device!~"cilium.*"}[5m])) by (kubernetes_node)
    - record: node_network_receive_bytes_per_second
      expr: sum(rate(node_network_receive_bytes_total{device!="lo",device!~"lxc.*",device!~"cilium.*"}[5m])) by (kubernetes_node)
    - record: node_network_receive_errors_per_second
      expr: sum(rate(node_network_receive_errs_total{device!="lo",device!~"lxc.*",device!~"cilium.*"}[5m])) by (kubernetes_node)
  - name: container_metrics
    rules:
    - record: container_network_transmit_bytes_per_second
      expr: sum(rate(container_network_transmit_bytes_total{device!="lo",device!~"lxc.*",device!~"cilium.*"}[5m])) by (namespace,pod)
    - record: container_network_transmit_errors_per_second
      expr: sum(rate(container_network_transmit_errors_total{device!="lo",device!~"lxc.*",device!~"cilium.*"}[5m])) by (namespace,pod)
    - record: container_network_receive_bytes_per_second
      expr: sum(rate(container_network_receive_bytes_total{device!="lo",device!~"lxc.*",device!~"cilium.*"}[5m])) by (namespace,pod)
    - record: container_network_receive_errors_per_second
      expr: sum(rate(container_network_receive_errors_total{device!="lo",device!~"lxc.*",device!~"cilium.*"}[5m])) by (namespace,pod)
    - record: container_cpu_usage_seconds:rate3m
      expr: sum(rate(container_cpu_usage_seconds_total{namespace!="",pod!="",container!=""}[3m])) by (namespace,pod,container)
alertmanager:
  enabled: false
grafana:
  enabled: false
prometheusOperator:
  admissionWebhooks:
    enabled: false
    patch:
      enabled: false
  enabled: false
  tlsProxy:
    enabled: false
coreDns:
  enabled: false
kubeApiServer:
  enabled: false
kubeControllerManager:
  enabled: false
kubeDns:
  enabled: false
kubeEtcd:
  enabled: false
kubeProxy:
  enabled: false
kubeScheduler:
  enabled: false
kubeStateMetrics:
  enabled: false
kubelet:
  enabled: true
  namespace: kube-system
  serviceMonitor:
    ## Scrape interval. If not set, the Prometheus default scrape interval is used.
    ##
    interval: ""

    ## Enable scraping the kubelet over https. For requirements to enable this see
    ## https://github.com/coreos/prometheus-operator/issues/926
    ##
    https: true

    ## Metric relabellings to apply to samples before ingestion
    ##
    cAdvisorMetricRelabelings:
    - sourceLabels: [pod_name]
      regex: (.+)
      targetLabel: pod
    - sourceLabels: [container_name]
      regex: (.+)
      targetLabel: container

    # 	relabel configs to apply to samples before ingestion.
    #   metrics_path is required to match upstream rules and charts
    ##
    cAdvisorRelabelings:
    - sourceLabels: [__metrics_path__]
      targetLabel: metrics_path
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - targetLabel: __adress__
      replacement: kubernetes.default.svc:443
    - sourceLabels: [__meta_kubernetes_node_name]
      regex: (.+)
      targetLabel: __metrics_path__
      replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor

    metricRelabelings: []
    # - sourceLabels: [__name__, image]
    #   separator: ;
    #   regex: container_([a-z_]+);
    #   replacement: $1
    #   action: drop
    # - sourceLabels: [__name__]
    #   separator: ;
    #   regex: container_(network_tcp_usage_total|network_udp_usage_total|tasks_state|cpu_load_average_10s)
    #   replacement: $1
    #   action: drop

    # 	relabel configs to apply to samples before ingestion.
    #   metrics_path is required to match upstream rules and charts
    ##
    relabelings:
    - sourceLabels: [__metrics_path__]
      targetLabel: metrics_path
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - targetLabel: __address__
      replacement: kubernetes.default.svc:443
    - sourceLabels: [__meta_kubernetes_node_name]
      regex: (.+)
      targetLabel: __metrics_path__
      replacement: /api/v1/nodes/$1/proxy/metrics
nodeExporter:
  enabled: false
prometheus:
  prometheusSpec:
    tolerations:
      - effect: NoSchedule
        key: node.kubernetes.io/not-ready
        operator: "Exists"
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: "Exists"
    additionalScrapeConfigs:
    - job_name: kubernetes-service-endpoints
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scrape
      - action: replace
        regex: (https?)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scheme
        target_label: __scheme__
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_service_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: kubernetes_node
    - job_name: kubernetes-services
      kubernetes_sd_configs:
      - role: service
      metrics_path: /probe
      params:
        module:
        - http_2xx
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_probe
      - source_labels:
        - __address__
        target_label: __param_target
      - replacement: blackbox
        target_label: __address__
      - source_labels:
        - __param_target
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name
    - job_name: kubernetes-pods
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: kubernetes_pod_name
